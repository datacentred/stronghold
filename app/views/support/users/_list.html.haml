- @users.each do |user|
  = javascript_error_messages_for(user)
  = javascript_success_messages_for(user)
  
.page-controls
  - if can? :modify, Invite
    %button.btn.btn-primary{'data-toggle' => "modal", 'data-target' => "#inviteUser"}
      %i.fa.fa-envelope
      = t(:invite_new_user)
  - else
    &nbsp;

- if open_invites.any? && can?(:modify, Invite)
  %h3
    = t(:pending_invites)
    = "(#{@open_invites.count})"
  %table.table
    %thead
      %th
        %i.fa.fa-envelope
      %th
        = t(:email)
      %th
        = t(:roles)
    %tbody
      - open_invites.each do |invite|
        %tr
          %td= gravatar_image_tag(invite.email, title: invite.email, alt: invite.email, class: 'img-circle')
          %td= invite.email
          %td= invite.roles.collect(&:name).join ", "

%h3
  = t(:users)
  = "(#{@users.count})"
%table.table
  %thead
    %th
      %i.fa.fa-user
    %th
      = t(:name)
    %th
      = t(:email)
    %th
      = t(:roles)
    %th
  %tbody
    - users.each do |user|
      %tr
        %td= gravatar_image_tag(user.email, title: user.name, alt: user.name, class: 'img-circle')
        %td= link_to user.name, "#user_#{user.id}", 'data-toggle' => 'collapse', 'data-parent' => '#accordionUsers'
        %td= link_to user.email, "mailto:#{user.email}"
        %td
          %i.fa.fa-key
          = list_of_roles(user)
        %td
          - if can?(:modify, User) && user.id != current_user.id
            %a{href: support_user_path(user), data: { remote: true, method: :delete, confirm: "Are you sure?"}}
              %i.fa.fa-trash-o


= render partial: 'support/users/invite_user'