- if instances && instances.any?
  %div.usage-back
    %h3 Instance Usage
    .table-responsive
      %table.table.table-hover.phone-bill
        %tbody
          - instances.group_by{|i| i[:flavor][:flavor_id]}.each do |flavor_id, instances|
            %tr.highlight
              %td.icon
                %i.fa.fa-rocket
              %td== Flavor: #{instances.first[:flavor][:name]}
              %td Unique Identifier
              %td Architecture
              %td First Booted
              %td Status
              %td Terminated
              %td
                Hours Active This Period
              %td
                Total
            %tr
              %td.line_entry
              %td.line_entry
              %td.line_entry
              %td.line_entry
              %td.line_entry
              %td.line_entry
              %td.line_entry
              %td.line_entry
              %td.line_entry
            - instances.sort { |x,y| x[:name] <=> y[:name] }.each do |instance|
              %tr
                %td.line_entry
                  - if instance[:windows]
                    %i.fa.fa-windows{title: 'Windows Instance †'}
                  - if instance[:resizes] && instance[:resizes].any?
                    %i.fa.fa-arrows-alt{title: "This instance has been resized at least once. †\n\n#{instance[:resizes] ? instance[:resizes].join("\n") : 'No further details found.'}"}
                  &nbsp;
                %td.line_entry= instance[:name]
                %td.line_entry= instance[:uuid]
                %td.line_entry= architecture_human_name(instance[:arch])
                %td.line_entry= instance[:first_booted_at]
                %td.line_entry= state_with_icon(instance[:latest_state])
                %td.line_entry= (instance[:terminated_at] && instance[:terminated_at] <= @to_date) ? instance[:terminated_at] : '-'
                %td.line_entry
                  %i.fa.fa-clock-o
                  == #{number_with_delimiter(instance[:billable_hours], :delimiter => ',')} of #{@total_hours}
                - if instance[:flavor][:rate].present?
                  %td.line_entry== £#{number_with_precision(instance[:cost], :delimiter => ',', :separator => '.', :precision => 2)}
            %tr.highlight.bottomline
              %td &nbsp;
              %td &nbsp;
              %td &nbsp;
              %td &nbsp;
              %td &nbsp;
              %td &nbsp;
              %td== Total #{instances.first[:flavor][:name]}:
              %td== #{number_with_delimiter(instances.map{|i| i[:billable_hours]}.sum, :delimiter => ',')} hours
              %td== £#{number_with_precision(@usage_decorator.instance_total(project.id, flavor_id), :delimiter => ',', :separator => '.', :precision => 2)}
            %tr
              %td &nbsp;
              %td &nbsp;
              %td &nbsp;
              %td &nbsp;
              %td &nbsp;
              %td &nbsp;
              %td &nbsp;
              %td &nbsp;
              %td &nbsp;
